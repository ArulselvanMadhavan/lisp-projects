* All Lists are created Equal

** ind-Vec
 #+BEGIN_SRC racket
 (ind-Vec n es
          mot
          base
          step)
 #+END_SRC
 - n is a Nat
 - es is (Vec E n)
 - mot is 
   #+BEGIN_SRC racket
   (Π ((k Nat))
      (-> (Vec E k)
          U))
   #+END_SRC
 - base is (mot zero vecnil)
 - step is
   #+BEGIN_SRC racket
   (Π ((k Nat)
       (h E)
       (t (Vec E k)))
       (-> (mot k t)
           (mot (add1 k) (vec:: h t))))
   #+END_SRC
 - Output type of ind-Vec is a (mot n target)
** Parameters vs Indices
   - Motive is a Pie expression now.
   - It uses 'k', a Nat in the pie expression since 'k' varies for
     each entry in a Vec.
   - Example for a Parameter is 'E' in the (Vec E k)
   - Once a parameter is fixed, it doesn't change for any part of the Vec.
   - 'k' on the other hand changes for every entry. So, 'k' is called
     an 'index'.
   - Family of types whose argument is an index is sometimes called an
     "indexed family"
